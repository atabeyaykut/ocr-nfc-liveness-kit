// React Native Android app module build configuration (RN 0.74.7 LTS compatible)
// This file defines debug and release buildTypes and a sample signingConfig

plugins {
  id 'com.android.application'
  // id 'com.facebook.react'  // Commented out - not required for native modules
  id 'jacoco'
}

android {
  namespace "com.ocrmobilesdk"
  compileSdkVersion 35

  defaultConfig {
    applicationId "com.ocrmobilesdk"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion 34
    versionCode 1
    versionName "1.0.0"
    multiDexEnabled true
    
    // React Native BuildConfig fields
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", "false"
    buildConfigField "boolean", "IS_HERMES_ENABLED", "true"
    
    // Only build for ARM architectures (skip x86 emulators)
    ndk {
      abiFilters "armeabi-v7a", "arm64-v8a"
    }
  }

  // Add Hermes configuration for Reanimated compatibility
  project.ext.react = [
    enableHermes: true,
    hermesCommand: "../../node_modules/react-native/sdks/hermesc/%OS-BIN%/hermesc"
  ]

  buildFeatures {
    buildConfig true  // Enable BuildConfig generation
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }

  def keystorePropertiesFile = rootProject.file("keystore.properties")
  def keystoreProperties = new Properties()
  if (keystorePropertiesFile.exists()) {
      keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
  }

  signingConfigs {
    debug {
      // Debug keystore is automatically provided by the Android SDK
    }
    release {
        def storeFilePath = keystoreProperties['STORE_FILE'] ?: 'ocr-release-key.keystore'
        storeFile rootProject.file(storeFilePath)
        storePassword keystoreProperties['STORE_PASSWORD'] ?: System.getenv("RELEASE_STORE_PASSWORD")
        keyAlias keystoreProperties['KEY_ALIAS'] ?: 'ocr-key-alias'
        keyPassword keystoreProperties['KEY_PASSWORD'] ?: System.getenv("RELEASE_KEY_PASSWORD")
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix ".debug"
      versionNameSuffix "-debug"
      debuggable true
      signingConfig signingConfigs.debug
    }
    release {
        signingConfig signingConfigs.release
        minifyEnabled true
        shrinkResources true
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  // Generate separate APKs per CPU architecture (optional)
  // Only build for real devices (ARM), skip x86/x86_64 emulators to avoid build issues
  splits {
    abi {
      enable true
      reset()
      include 'armeabi-v7a', 'arm64-v8a'  // x86 removed
      universalApk true  // Set to true if you need universal APK
    }
  }

  packagingOptions {
    resources {
      excludes += [
        'META-INF/LICENSE*',
        'META-INF/DEPENDENCIES',
        'META-INF/NOTICE*'
      ]
    }
    jniLibs {
      // Ensure all SO libraries are included without duplication errors
      pickFirsts += ['**/libc++_shared.so', '**/libfbjni.so']
    }
  }
}



dependencies {
  // React Native core (required for bridge functionality)
  implementation "com.facebook.react:react-android:0.74.7"
  // Hermes JS engine native binaries (required when Hermes is enabled)
  implementation "com.facebook.react:hermes-android:0.74.7"

  // Add AndroidX AppCompat (commonly needed by RN libs)
  implementation "androidx.appcompat:appcompat:1.6.1"
  implementation "com.google.android.material:material:1.10.0"
  
  // Multidex support for large applications
  implementation "androidx.multidex:multidex:2.0.1"
  
  // BouncyCastle for cryptography (NFC signature validation)
  implementation "org.bouncycastle:bcprov-jdk15on:1.70"
  implementation "org.bouncycastle:bcpkix-jdk15on:1.70"
  
  // OkHttp3 for secure networking with certificate pinning
  implementation "com.squareup.okhttp3:okhttp:4.12.0"

  // Security crypto for EncryptedSharedPreferences
  implementation "androidx.security:security-crypto:1.1.0-alpha06"
  
  // Gson for JSON serialization
  implementation "com.google.code.gson:gson:2.10.1"
  
  // CameraX for ImageProxy
  implementation "androidx.camera:camera-core:1.3.1"
  implementation "androidx.camera:camera-camera2:1.3.1"
  implementation "androidx.camera:camera-lifecycle:1.3.1"
  
  // ML Kit dependencies - Native modül için gerekli
  implementation "com.google.mlkit:face-detection:16.1.6"
  
  // ML Kit Text Recognition - UNBUNDLED model (react-native-text-recognition için gerekli)
  implementation "com.google.mlkit:text-recognition:16.0.0"
  
  // Eski versiyon (bundled - react-native-text-recognition ile uyumlu değil)
  // implementation "com.google.android.gms:play-services-mlkit-text-recognition:19.0.0"
  
  // React Native annotations already included via react-android above

  // NFC (if used natively) - Temporarily disabled (correct version not found in Maven)
  // implementation "com.google.android.gms:play-services-nfc:18.0.0"
  // Note: react-native-nfc-manager will handle this dependency automatically
  
  // Test dependencies
  testImplementation "junit:junit:4.13.2"
  testImplementation "org.mockito:mockito-core:4.11.0"
  testImplementation "org.robolectric:robolectric:4.10.3"
  testImplementation "androidx.test:core:1.5.0"
  testImplementation "androidx.test.ext:junit:1.1.5"
  
  // Force React Native version resolution to fix native module compatibility
  configurations.all {
    resolutionStrategy {
      force "com.facebook.react:react-native:${rootProject.ext.reactNativeVersion}"
      force "com.facebook.react:react-android:${rootProject.ext.reactNativeVersion}"
      force "com.facebook.react:hermes-android:${rootProject.ext.reactNativeVersion}"
    }
    // Allow all modules - compatibility issues resolved with proper autolinking
  }
}

// JaCoCo test coverage configuration
jacoco {
  toolVersion = "0.8.10"
}

tasks.withType(Test) {
  jacoco.includeNoLocationClasses = true
  jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
  reports {
    xml.required = true
    html.required = true
  }

  def fileFilter = [
    '**/R.class',
    '**/R$*.class',
    '**/BuildConfig.*',
    '**/Manifest*.*',
    '**/*Test*.*',
    'android/**/*.*'
  ]

  def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug", excludes: fileFilter)
  def mainSrc = "${project.projectDir}/src/main/java"

  sourceDirectories.setFrom(files([mainSrc]))
  classDirectories.setFrom(files([debugTree]))
  executionData.setFrom(fileTree(dir: "${buildDir}", includes: [
    'jacoco/testDebugUnitTest.exec',
    'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
  ]))
}

// React Native CLI Autolinking
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")
applyNativeModulesAppBuildGradle(project)
